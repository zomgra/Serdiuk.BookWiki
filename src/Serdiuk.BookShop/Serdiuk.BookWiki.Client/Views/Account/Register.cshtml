@using Serdiuk.BookShop.Domain.Models.Identity.DTO
@model RegisterRequestDto
@inject IConfiguration _config;

@{
    string message = string.Empty;
}
<div class="alert-danger" id="alert-error-holder" style="display:none">
    <p id="alert-error-text"></p>
</div>

<div class="row">
    <form class="col-3" onsubmit="register(event,@message)">
        <div>
            <label for="nameInput">Username</label>
            <input id="nameInput" class="form-control form-text" name="name" />
        </div>
        <div>
            <label for="emailInput">Email</label>
            <input class="form-control form-text" id="emailInput" name="email" />
        </div>
        <div>
            <label for="passwordInput">Password</label>
            <input class="form-control form-text" id="passwordInput" type="password" name="password" />
        </div>
        <button class="btn btn-success" type="submit">Submit</button>
    </form>
</div>

@section Scripts {
    @{string Url = _config.GetSection("API:Account").Value + "/Register";}
    <script>
        function register(e, message){
            e.preventDefault();
            var formData = {
                name: $("#nameInput").val(),
                email: $("#emailInput").val(),
                password: $("#passwordInput").val()
            };

            $.ajax({
                type: 'POST',
                url: '@Url',
                data: JSON.stringify(formData),
                processData: false,
                contentType: 'application/json',
                success: function (response) {
                    
                    if(response.result){
                        TokenClass.updateTokens(response.token, response.refresh)
                        window.location.href = '/'
                    }
                    else{
                        $("#alert-error-holder").show();
                        $('#alert-error-text').text(responce.errors);
                    }
                },
                error: function (xhr, status, error) {
                   
                    message = 'Error with status: '+status;
                }
            })
        }
    </script>
}