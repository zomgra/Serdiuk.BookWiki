@model Guid
@inject IConfiguration _config

<div id="bookContainer" class="row d-flex justify-content-center">
    
</div>
<div id="commentsContainer">
    <div class="authorizeDiv">
        <textarea id="commentContent" placeholder="Content for comment">

        </textarea>
        <a class="btn btn-outline-success" onclick="sendComment('@Model')">Create comment</a>
    </div>
</div>

@section Scripts 
{
    <script>
        @{
            string GetBookUrl = _config.GetSection("API:Book").Value + "/get-by-id";
            string GetCommentUrl = _config.GetSection("API:Comment").Value + "/get-by-id";
            string CreateCommentUrl = _config.GetSection("API:Comment").Value + "/create";
        }
        $(document).ready(function(){
            getBook('@Model');
            getComments('@Model')
        })
        function getBook(id){
            $.ajax({
                url: '@GetBookUrl/'+id,
                method:"GET",
                success: function(data){
                    loadBookToDoc(data);
                }
            })
        }
        function getComments(id){
            $.ajax({
                url: '@GetCommentUrl'+"?bookId="+id,
                method:"GET",
                headers: {
                    'Authorization': 'Bearer ' + localStorage.getItem('access'),
                },
                success: function(data){
                    loadComments(data)
                }
            })
        }

        function sendComment(id){

            let contentComment = $("#commentContent").val();
            
            $.ajax({
                url: '@CreateCommentUrl',
                method:"POST",
                headers: {
                    'Authorization': 'Bearer ' + localStorage.getItem('access'),
                },
                contentType:"application/json",
                data: JSON.stringify({bookId:id,content:contentComment}),
                success:function(data){
                    console.log('Success create comment')
                }
            })
        }

        function loadComments(comments){
            let container = $("#commentsContainer");
            
            comments.forEach(comment=>{
                var commentHtml = `
                    <div class="card mb-3">
                        <div class="card-body">
                            <h5 class="card-title">${comment.writerUsername}</h5>
                            <p class="card-text">${comment.content}</p>
                            <p class="card-text">Likes: ${comment.likes}</p>
                        </div>
                    </div>
                `;
                container.append(commentHtml);
            })
        }

        function loadBookToDoc(book){
            let container = $('#bookContainer');
            let dataDiv = $('<div>').addClass('row border d-flex justify-content-center')

            let cover = $('<img>')
                .addClass('img-fluid mx-auto d-block')
                .prop('src', 'data:image/png;base64,' + book.cover)

            let coverDiv = $('<div>')
                .addClass('col-4 m-2').append(cover);

            let name = $('<h4>').addClass('').text(book.name);
            let nameDiv = $('<div>').addClass('col-12 d-flex justify-content-center').append(name);

            let desc = $('<p>').addClass('h6 lead').text(book.description);
            let descDiv = $('<div>').addClass('col d-flex justify-content-center').append(desc);

            let textDiv = $('<div>').addClass('col flex-column').append(nameDiv, descDiv);
            dataDiv.append(coverDiv, textDiv).appendTo(container)

            let imagesDiv = $('<div>').addClass('row d-flex justify-content-center')
            let imageCarousel = $('<div>').addClass('carousel slide').prop("style", "max-width:250px").prop('data-bs-ride', "carousel").prop('id', "carouselControls")
            let carouselInner = $('<div>').addClass('carousel-inner d-flex justify-content-start').appendTo(imageCarousel);
            book.images.forEach((image, index)=>{
                let img = $('<img>').addClass("img-fluid rounded").prop("style", "max-height:250px; max-width: 350px").prop('src', 'data:image/png;base64,' + image.data)
                let carouselItem = $('<div>').addClass(` ${index == 0 ? "carousel-item active" : "carousel-item"}`).appendTo(carouselInner).append(img);
            })

            let prevButton = $('<button>').addClass('carousel-control-prev').attr('type', 'button').attr('data-bs-target', '#carouselControls').attr('data-bs-slide', 'prev');
            let prevIcon = $('<span>').addClass('carousel-control-prev-icon').attr('aria-hidden', 'true');
            let prevText = $('<span>').addClass('visually-hidden').text('Previous');
            prevButton.append(prevIcon, prevText);

            let nextButton = $('<button>').addClass('carousel-control-next').attr('type', 'button').attr('data-bs-target', '#carouselControls').attr('data-bs-slide', 'next');
            let nextIcon = $('<span>').addClass('carousel-control-next-icon').attr('aria-hidden', 'true');
            let nextText = $('<span>').addClass('visually-hidden').text('Next');
            nextButton.append(nextIcon, nextText);

            imageCarousel.append(prevButton, nextButton);

            imagesDiv.append(imageCarousel).appendTo(textDiv);


        }
    </script>
}